#!/bin/bash
# This was originally taken from Omarchy: https://github.com/omarchy/omarchy/blob/main/bin/omarchy-cmd-screenrecord

OUTPUT_DIR="$HOME/Screenshots"

if [[ ! -d "$OUTPUT_DIR" ]]; then
  notify-send "Screen recording directory does not exist: $OUTPUT_DIR" -u critical -t 3000
  exit 1
fi

SCOPE="$1"

AUDIO=$([[ $2 == "audio" ]] && echo "--audio")

start_screenrecording() {
  local filename="$OUTPUT_DIR/screenrecording-$(date +'%Y-%m-%d_%H-%M-%S').mp4"

  if lspci | grep -qi 'nvidia'; then
    wf-recorder $AUDIO -f "$filename" -c libx264 -p crf=23 -p preset=medium -p movflags=+faststart "$@" &
  else
    wl-screenrec $AUDIO -f "$filename" --ffmpeg-encoder-options="-c:v libx264 -crf 23 -preset medium -movflags +faststart" "$@" &
  fi
}

stop_screenrecording() {
  pkill -x wl-screenrec
  pkill -x wf-recorder

  sleep 0.2

  latest_recording=$(ls -t "$OUTPUT_DIR"/screenrecording-*.mp4 2>/dev/null | head -1)
  if [[ -n "$latest_recording" ]]; then
    mpv "$latest_recording" &
    notify-send "Screen recording saved to $OUTPUT_DIR" -t 2000
  fi
}

screenrecording_active() {
  pgrep -x wl-screenrec >/dev/null || pgrep -x wf-recorder >/dev/null
}

if screenrecording_active; then
  stop_screenrecording
elif [[ "$SCOPE" == "output" ]]; then
  output=$(slurp -o) || exit 1
  start_screenrecording -g "$output"
else
  region=$(slurp) || exit 1
  start_screenrecording -g "$region"
fi
