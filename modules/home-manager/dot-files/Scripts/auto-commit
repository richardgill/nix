#!/usr/bin/env bash

set -euo pipefail

trap 'echo "Error on line $LINENO" >&2; exit 1' ERR

# Only add all files if nothing is staged
if [ -z "$(git diff --cached --name-only)" ]; then
    echo "$ git add ."
    git add .
else
    echo "Using existing staged changes"
fi

if [ -z "$(git status --porcelain)" ]; then
    echo "Nothing to commit, working tree clean"
    exit 0
fi

echo -e "\nGenerating commit message with AI..."

DIFF_LINES=$(git diff --cached | wc -l)

PROMPT_BASE=$(cat <<EOF
Generate a succinct commit message for these changes. Output ONLY the commit message, no explanation. Do not use prefixes like [chore], [billing], etc. Keep it simple and brief for PR review.

<example>
Made pay button green
</example>

<example>
Fixed typo in error message
</example>

<example>
Removed console.log from header component
</example>

All the information to understand what changed is right here, no tool calls, do it fast: 

$(git diff --cached --stat)
EOF
)

if [ "$DIFF_LINES" -gt 400 ]; then
    PROMPT="$PROMPT_BASE"
else
    PROMPT="$PROMPT_BASE

$(git diff --cached)"
fi

# if ! COMMIT_MSG=$(claude --model haiku -p "$PROMPT" 2>&1); then
# if ! COMMIT_MSG=$(opencode run "$PROMPT" --model anthropic/claude-haiku-4-5 2>&1); then
if ! COMMIT_MSG=$(opencode run "$PROMPT" --model anthropic/claude-haiku-4-5 2>&1); then
  echo "Error generating commit message: $COMMIT_MSG" >&2
  exit 1
fi

echo -e "\nCommit message generated: $COMMIT_MSG"

if ! git commit -m "$COMMIT_MSG" 2>&1; then
  echo "Error: git commit failed" >&2
  exit 1
fi

